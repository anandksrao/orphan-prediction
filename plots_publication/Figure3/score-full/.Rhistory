ls()
dir()
exit
quit()
install.packages("ggplot2")
install.packages("plyr")
library(ggplot2)
setwd("~/orphan_spreadsheets/plots_publication/Figure3/score-full")
library(ggplot2)
library(gplots)
input <- read.csv("combined.score.distrib.tsv", sep="\t", quote='', stringsAsFactors=TRUE,header=TRUE)
input$Score <- factor(input$Score, levels=c
input$Method <- factor(input$Method, levels=c("Make-small+trans", "Make-pool+trans", "Brake-small", "Brake-pool", "DirInf-orph", "DirInf-pool", "BIND-orph", "MIND-orph"))
l <- ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score") +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red")) +
scale_x_discrete(breaks = levels(input$Score+1)[c(T, rep(F, 25))])
l
library(ggplot2)
library(gplots)
input <- read.csv("combined.score.distrib.tsv", sep="\t", quote='', stringsAsFactors=TRUE,header=TRUE)
input$Score <- factor(input$Score, levels=c
input$Method <- factor(input$Method, levels=c("Make-small+trans", "Make-pool+trans", "Brake-small", "Brake-pool", "DirInf-orph", "DirInf-pool", "BIND-orph", "MIND-orph"))
l <- ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score") +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red")) +
scale_x_discrete(breaks = levels(input$Score)[c(T, rep(F, 25))])
l
library(ggplot2)
library(gplots)
input <- read.csv("combined.score.distrib.tsv", sep="\t", quote='', stringsAsFactors=TRUE,header=TRUE)
input$Score <- factor(input$Score, levels=c
input$Method <- factor(input$Method, levels=c("Make-small+trans", "Make-pool+trans", "Brake-small", "Brake-pool", "DirInf-orph", "DirInf-pool", "BIND-orph", "MIND-orph"))
ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score") +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red")) +
scale_x_discrete(breaks = levels(input$Score+1)[c(T, rep(F, 25))])
ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score") +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red")) +
scale_x_discrete(breaks = levels(input$Score)[c(T, rep(F, 25))])
ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score", breaks = levels(input$Score)[c(T, rep(F, 25))]) +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red"))
ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score", breaks = levels(input$Score)[c(0,25,50,75,100)]) +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red"))
ggplot(input, aes(x= Score, y= Counts, color=Method, group=Method)) +
geom_line(size = 1) +
scale_y_continuous(name = "Number of Transcripts",
breaks = seq(0, 3500, 500),
limits=c(1, 3500)) +
scale_x_discrete(name = "nF1 Score", breaks = levels(input$Score)[c(1,26,51,76,101)]) +
ggtitle("Nucleotide F1 score distribution") +
theme_set(theme_bw(base_size = 18)) +
theme(panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(face="bold"),
axis.text.x = element_text(colour="black", size = 16, hjust = 1),
axis.text.y = element_text(colour="black", size = 16),
axis.line = element_line(size=1.0, colour = "black"),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.position = c(0.2, 0.8),
legend.title = element_text(size=14),
legend.text = element_text(size=12)) +
geom_point() +
scale_color_manual(values=c("palevioletred1", "palevioletred3", "olivedrab", "olivedrab2", "slateblue1", "tan1", "royalblue", "red"))
lt
